[{"/home/aditya/Desktop/React Project/ecommerce-front/src/index.js":"1","/home/aditya/Desktop/React Project/ecommerce-front/src/App.js":"2","/home/aditya/Desktop/React Project/ecommerce-front/src/reportWebVitals.js":"3","/home/aditya/Desktop/React Project/ecommerce-front/src/Routes.js":"4","/home/aditya/Desktop/React Project/ecommerce-front/src/user/Signup.js":"5","/home/aditya/Desktop/React Project/ecommerce-front/src/user/Signin.js":"6","/home/aditya/Desktop/React Project/ecommerce-front/src/core/Home.js":"7","/home/aditya/Desktop/React Project/ecommerce-front/src/core/Menu.js":"8","/home/aditya/Desktop/React Project/ecommerce-front/src/core/Layout.js":"9","/home/aditya/Desktop/React Project/ecommerce-front/src/config.js":"10","/home/aditya/Desktop/React Project/ecommerce-front/src/auth/index.js":"11","/home/aditya/Desktop/React Project/ecommerce-front/src/auth/PrivateRoute.js":"12","/home/aditya/Desktop/React Project/ecommerce-front/src/user/UserDashboard.js":"13","/home/aditya/Desktop/React Project/ecommerce-front/src/user/AdminDashboard.js":"14","/home/aditya/Desktop/React Project/ecommerce-front/src/auth/AdminRoute.js":"15","/home/aditya/Desktop/React Project/ecommerce-front/src/admin/AddCategory.js":"16","/home/aditya/Desktop/React Project/ecommerce-front/src/admin/apiAdmin.js":"17","/home/aditya/Desktop/React Project/ecommerce-front/src/admin/AddProduct.js":"18","/home/aditya/Desktop/React Project/ecommerce-front/src/core/apiCore.js":"19","/home/aditya/Desktop/React Project/ecommerce-front/src/core/Card.js":"20","/home/aditya/Desktop/React Project/ecommerce-front/src/core/ShowImage.js":"21","/home/aditya/Desktop/React Project/ecommerce-front/src/core/Shop.js":"22","/home/aditya/Desktop/React Project/ecommerce-front/src/core/Checkbox.js":"23","/home/aditya/Desktop/React Project/ecommerce-front/src/core/Radiobox.js":"24","/home/aditya/Desktop/React Project/ecommerce-front/src/core/fixedPrices.js":"25","/home/aditya/Desktop/React Project/ecommerce-front/src/core/Search.js":"26","/home/aditya/Desktop/React Project/ecommerce-front/src/core/Product.js":"27","/home/aditya/Desktop/React Project/ecommerce-front/src/core/cartHelpers.js":"28","/home/aditya/Desktop/React Project/ecommerce-front/src/core/Cart.js":"29","/home/aditya/Desktop/React Project/ecommerce-front/src/core/Checkout.js":"30","/home/aditya/Desktop/React Project/ecommerce-front/src/admin/Orders.js":"31","/home/aditya/Desktop/React Project/ecommerce-front/src/user/Profile.js":"32","/home/aditya/Desktop/React Project/ecommerce-front/src/user/apiUser.js":"33","/home/aditya/Desktop/React Project/ecommerce-front/src/admin/ManageProducts.js":"34","/home/aditya/Desktop/React Project/ecommerce-front/src/admin/UpdateProduct.js":"35"},{"size":545,"mtime":1606904343411,"results":"36","hashOfConfig":"37"},{"size":95,"mtime":1606885956564,"results":"38","hashOfConfig":"37"},{"size":362,"mtime":1606885779160,"results":"39","hashOfConfig":"37"},{"size":2078,"mtime":1611577661845,"results":"40","hashOfConfig":"37"},{"size":2466,"mtime":1607612710401,"results":"41","hashOfConfig":"37"},{"size":2633,"mtime":1609136962047,"results":"42","hashOfConfig":"37"},{"size":1936,"mtime":1609134690728,"results":"43","hashOfConfig":"37"},{"size":2963,"mtime":1611496557976,"results":"44","hashOfConfig":"37"},{"size":528,"mtime":1611576243560,"results":"45","hashOfConfig":"37"},{"size":53,"mtime":1606907778747,"results":"46","hashOfConfig":"37"},{"size":1511,"mtime":1607680258746,"results":"47","hashOfConfig":"37"},{"size":381,"mtime":1607692685671,"results":"48","hashOfConfig":"37"},{"size":4253,"mtime":1611570491240,"results":"49","hashOfConfig":"37"},{"size":2202,"mtime":1611575983629,"results":"50","hashOfConfig":"37"},{"size":412,"mtime":1607696917346,"results":"51","hashOfConfig":"37"},{"size":2274,"mtime":1607882040647,"results":"52","hashOfConfig":"37"},{"size":4526,"mtime":1611592052198,"results":"53","hashOfConfig":"37"},{"size":5515,"mtime":1607881285058,"results":"54","hashOfConfig":"37"},{"size":3357,"mtime":1611486508511,"results":"55","hashOfConfig":"37"},{"size":3459,"mtime":1611465026078,"results":"56","hashOfConfig":"37"},{"size":339,"mtime":1609154360065,"results":"57","hashOfConfig":"37"},{"size":4270,"mtime":1609134735392,"results":"58","hashOfConfig":"37"},{"size":905,"mtime":1607854606614,"results":"59","hashOfConfig":"37"},{"size":553,"mtime":1607859622231,"results":"60","hashOfConfig":"37"},{"size":517,"mtime":1607859777544,"results":"61","hashOfConfig":"37"},{"size":3174,"mtime":1609081543794,"results":"62","hashOfConfig":"37"},{"size":1701,"mtime":1609154456324,"results":"63","hashOfConfig":"37"},{"size":2037,"mtime":1610608716698,"results":"64","hashOfConfig":"37"},{"size":1785,"mtime":1611464953462,"results":"65","hashOfConfig":"37"},{"size":4931,"mtime":1611485719303,"results":"66","hashOfConfig":"37"},{"size":6478,"mtime":1611550809971,"results":"67","hashOfConfig":"37"},{"size":3222,"mtime":1611568893758,"results":"68","hashOfConfig":"37"},{"size":1627,"mtime":1611569063168,"results":"69","hashOfConfig":"37"},{"size":2858,"mtime":1611577785002,"results":"70","hashOfConfig":"37"},{"size":6465,"mtime":1611593246709,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"1d1mliz",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"74"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"74"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"74"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"74"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"74"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"74"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"74"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"74"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"74"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"74"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"74"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"74"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"74"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"74"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"74"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"74"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"74"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/aditya/Desktop/React Project/ecommerce-front/src/index.js",[],["161","162"],"/home/aditya/Desktop/React Project/ecommerce-front/src/App.js",[],["163","164"],"/home/aditya/Desktop/React Project/ecommerce-front/src/reportWebVitals.js",[],"/home/aditya/Desktop/React Project/ecommerce-front/src/Routes.js",[],"/home/aditya/Desktop/React Project/ecommerce-front/src/user/Signup.js",[],"/home/aditya/Desktop/React Project/ecommerce-front/src/user/Signin.js",["165"],"import React,{useState} from 'react'\nimport Layout from '../core/Layout'\nimport {Link, Redirect} from 'react-router-dom'\nimport {autenticate, isAuthenticated, signinSubmit} from '../auth/index'\n\n\nconst Signin = () => {\n    const [values,setValues]=useState({\n      email:'',\n      password:'',\n      error:'',\n      loading:false,\n      redirectTorefer:false\n    })\n\n    const {user}=isAuthenticated();\n\n    const {email,password,loading,error,redirectTorefer}=values;\n\n    const handleChange = name =>event=>{\n\n      setValues({...values,error:false,[name]:event.target.value});\n    }\n   \n\n    const formSubmit=(e)=>{\n      e.preventDefault();\n      setValues({...values,error:false,loading:true})\n      signinSubmit({email:email,password:password})\n      .then(data=>{\n        if(data.error)\n        {\n          setValues({...values,error:data.error,loading:false});\n\n        }\n        else\n        {\n          autenticate(data,()=>{\n            setValues({\n              ...values,\n              redirectTorefer:true\n            })\n          })\n        }\n      })\n    }\n\n    const showError=()=>(\n      <div className=\"alert alert-danger\" style={{display:error?'':'none'}}>\n        {error}\n      </div>\n    )\n\n    const showLoading=()=>\n      loading &&(\n          <div className=\"alert alert-info\">\n              <h2>Loading...</h2>\n\n          </div>\n          \n    )\n    const redirectUser=()=>{\n        if(redirectTorefer){\n           if(user.role===1)\n           {\n            return(<Redirect to='/admin/dashboard'/>)\n           }\n           else{\n            return(<Redirect to='/user/dashboard'/>)\n           }\n        }\n        if(isAuthenticated())\n        {\n          return(<Redirect to='/'/>)\n        }\n    }\n\n    const signinForm =()=>(\n      <form>\n          <div className=\"form-group\">\n            <label htmlFor=\"email\" className=\"text-muted\">Email</label>\n            <input type=\"email\"onChange={handleChange('email')} className=\"form-control\" value={email} />\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"password\" className=\"text-muted\">Password</label>\n            <input type=\"password\" onChange={handleChange('password')} className=\"form-control\" value={password}/>\n          </div>\n\n          <button type=\"submit\" onClick={formSubmit} className=\"btn btn-primary\">Submit</button>\n\n      </form>\n\n    );\n    return (\n        <Layout title=\"Signin\" description=\"Signin now!\" className=\"container col-md-8 offset-md-2\">\n         {showLoading()}\n         {showError()}\n         {signinForm()}\n         {redirectUser()}\n        </Layout>\n    )\n}\n\nexport default Signin\n","/home/aditya/Desktop/React Project/ecommerce-front/src/core/Home.js",["166"],"import React,{useState,useEffect}from 'react'\nimport Layout from './Layout'\nimport {getProducts} from './apiCore'\nimport Card from './Card';\nimport Search from './Search';\n\n\nconst Home = () => {\n\n    const [productsByArrival, setProductsByArrival] = useState([]);\n    const [productsBySell, setProductsBySell] = useState([]);\n    const [error, setError] = useState(false)\n\n\n    const loadProductsByArrival=()=>{\n        getProducts('createdAt').then(data=>{\n            if(data.err)\n            {\n                setError(data.err);\n            }\n            else{\n                setProductsByArrival(data)\n            }\n        })\n    }\n\n    const loadProductsBySell=()=>{\n        getProducts('sold').then(data=>{\n            if(data.err)\n            {\n                setError(data.err);\n            }\n            else{\n                setProductsBySell(data)\n            }\n        })\n    }\n    \n    useEffect(() => {\n       loadProductsByArrival();\n       loadProductsBySell();\n    }, [])\n\n    return (\n        <Layout title=\"Home page\" description=\"Welcome to mern app\">\n            <Search/>\n\n            <div className=\"container-fluid\">\n                <h2>New Arrival</h2>\n                <div className=\"row\">\n               \n                    {productsByArrival && productsByArrival.map((product,i)=>(\n                     <div className=\"col-4 mb-2\" key={i}>\n                        <Card product={product}/>\n                     </div>\n                    ))}\n                </div>\n            </div>\n           \n           <div className=\"container-fluid\">\n                <h2>Best Sellers</h2>\n                <div className=\"row\">\n                {productsBySell && productsBySell.map((product,i)=>( <div className=\"col-4 mb-2\" key={i}>\n                        <Card product={product}/>\n                     </div>))}\n                </div>\n           </div>\n          \n        </Layout>\n    )\n}\n\nexport default Home\n","/home/aditya/Desktop/React Project/ecommerce-front/src/core/Menu.js",[],"/home/aditya/Desktop/React Project/ecommerce-front/src/core/Layout.js",[],"/home/aditya/Desktop/React Project/ecommerce-front/src/config.js",[],"/home/aditya/Desktop/React Project/ecommerce-front/src/auth/index.js",[],"/home/aditya/Desktop/React Project/ecommerce-front/src/auth/PrivateRoute.js",[],"/home/aditya/Desktop/React Project/ecommerce-front/src/user/UserDashboard.js",["167","168"],"import React, { useState,useEffect } from 'react'\nimport { Link } from 'react-router-dom';\nimport { isAuthenticated } from '../auth'\nimport Layout from '../core/Layout'\nimport { getPurchaseHistory } from './apiUser';\nimport moment from 'moment'\n\nconst  UserDashboard = () => {\n\n\n    const {user:{_id,name,email,role}}=isAuthenticated();\n\n    const [error,setError]=useState(false)\n    const [history,setHistory]=useState([])\n\n    const {token}=isAuthenticated();\n    const userId=_id;\n    const init=(userId,token)=>{\n        getPurchaseHistory(userId,token)\n        .then(response=>{\n            if(response.err)\n            {\n                setError(response.err)\n            }\n            else\n            {\n                setHistory(response);\n            }\n        })\n\n    }\n\n\n    useEffect(() => {\n     init(userId,token);\n    }, [])\n\n    const userLinks=()=>{\n        return(\n\n            <div className=\"card mb-5\">\n                <div className=\"card-header h2\">\n                    User Links\n                </div>\n                <ul className=\"list-group list-group-flush\">\n                    <li className=\"list-group-item\" key={1}>\n                        <Link className=\"nav-link\" to=\"/cart\">My cart</Link>\n                    </li>\n                    <li className=\"list-group-item\" key={2}>\n                        <Link className=\"nav-link\" to={`/profile/${_id}`}>Update Profile</Link>\n                    </li>\n                </ul>\n            </div>\n        )\n    }\n\n\n\n      \n    const userInfo = () => {\n        return(\n        <div className='card mb-5'>\n            <h3 className='card-header'>\n                User Information\n            </h3>\n            <ul className='list-group'>\n                <li className='list-group-item' key={1}>\n                    {name}\n                </li>\n                <li className='list-group-item' key={2}>\n                    {email}\n                </li>\n                <li className='list-group-item' key={3}>\n                    {role === 1 ? 'Admin' : 'Registered user'}\n                </li>\n            </ul>\n        </div>\n        );\n    }\n\n    const purchaseHistory = (history) => {\n        return (\n            <div className=\"card mb-5\">\n                <h3 className=\"card-header\">\n                    Purchase history\n                </h3>\n                <ul className=\"list-group\">\n                    <li className=\"list-group-item\" key={1}>\n                        {history.map((h, i) => {\n                            return (\n                                <div>\n                                    <hr />\n                                    {h.products.map((p, i) => {\n                                        return(\n                                            <div key={i}>\n                                                <h6>\n                                                    Product name: {p.name}\n                                                </h6>\n                                                <h6>\n                                                    Product price: ₹{p.price}\n                                                </h6>\n                                                <h6>\n                                                    Purchased date: {moment(p.createdAt).format('DD/MM/yyyy')},\n                                                    {moment(p.createdAt).fromNow()}\n                                                </h6>\n                                            </div>\n                                        );\n                                    })}\n                                </div>\n                            );\n                        })}\n                    </li>\n                </ul>\n            </div>\n        );\n    };\n\n\n    return (\n        <Layout title=\"Dashboard\" description=\"User Dashboard\" className=\"container\">\n            \n            <div className='row'>\n                    <div className='col-3'>\n                        {userLinks()}\n                    </div>\n                    <div className='col-9'>\n                        {userInfo()}\n                        {purchaseHistory(history)}\n                    </div>\n                </div>\n        </Layout>\n    )\n}\n\nexport default UserDashboard\n","/home/aditya/Desktop/React Project/ecommerce-front/src/user/AdminDashboard.js",["169"],"import React from 'react'\nimport { Link } from 'react-router-dom';\nimport { isAuthenticated } from '../auth'\nimport Layout from '../core/Layout'\n\nconst  AdminDashboard = () => {\n\n\n    const {user:{_id,name,email,role}}=isAuthenticated();\n\n\n    const adminLinks=()=>{\n        return(\n\n            <div className=\"card mb-5\">\n                <div className=\"card-header h2\">\n                    Admin Links\n                </div>\n                <ul className=\"list-group list-group-flush\">\n                    <li className=\"list-group-item\" key={1}>\n                        <Link className=\"nav-link\" to=\"/create/category\">Create Category</Link>\n                    </li>\n                    <li className=\"list-group-item\" key={2}>\n                        <Link className=\"nav-link\" to=\"/create/product\">Create Product</Link>\n                    </li>\n                    <li className=\"list-group-item\" key={3}>\n                        <Link className=\"nav-link\" to=\"/admin/orders\">View Orders</Link>\n                    </li>\n                    <li className=\"list-group-item\" key={4}>\n                        <Link className=\"nav-link\" to=\"/admin/manage/products\">Manage Products</Link>\n                    </li>\n                </ul>\n            </div>\n        )\n    }\n\n    return (\n        <Layout title=\"Dashboard\" description=\"Admin Dashboard\" className=\"container\">\n            \n        <div className=\"row\">\n            <div className=\"col-3\">\n                {adminLinks()}\n            </div>\n            <div className=\"col-9\">\n                <div className=\"card mb-5\">\n                    <div className=\"card-header h2\">\n                        User Information\n                    </div>\n                    <ul className=\"list-group list-group-flush\">\n                        <li className=\"list-group-item\" key={3}>Name: {name}</li>\n                        <li className=\"list-group-item\" key={4}>Email: {email}</li>\n                        <li className=\"list-group-item\" key={5}>Type: {role===1?'Admin':'Registered User'}</li>\n                    </ul>\n                </div>\n\n            </div>\n           \n        </div>\n        </Layout>\n    )\n}\n\nexport default AdminDashboard\n","/home/aditya/Desktop/React Project/ecommerce-front/src/auth/AdminRoute.js",[],"/home/aditya/Desktop/React Project/ecommerce-front/src/admin/AddCategory.js",["170"],"import React,{useState,useEffect} from 'react'\nimport Layout from '../core/Layout'\nimport {Link} from 'react-router-dom'\nimport { isAuthenticated } from '../auth';\nimport { createCategorySubmit } from './apiAdmin';\n\n\nconst AddCategory = () => {\n\n    const [name, setName] = useState('');\n    const [n,setN]=useState('');\n    const [error, setError] = useState(false);\n    const [success, setSuccess] = useState(false)\n\n\n    //destructure user and token from localstorage\n\n    const {user,token}=isAuthenticated();\n\n\n\n    const handleChange=(e)=>{\n        setError('');\n        setName(e.target.value)\n    }\n\n    const clickSubmit=(e)=>{\n        e.preventDefault();\n        setError('');\n        setSuccess(false);\n        createCategorySubmit({userId:user._id,token:token,category:{name}})\n        .then(data=>{\n            if(data.err)\n            {\n                setError(true);\n            }\n            else\n            {\n                setError('');\n                setSuccess(true);\n                setN(name)\n                setName('')\n\n            }\n        })\n\n    }\n\n\n    useEffect(() => {\n        setSuccess(false);\n        setError('');\n        setName('');\n      \n    }, [])\n\n    const showSuccess=()=>{\n        if(success)\n        {\n        return(\n            <div className=\"text-success h3\">{n} is created</div>\n        )\n        }\n    }\n\n    const showError=()=>{\n        if(error)\n        return(\n            <div className=\"text-danger h3\">Category should be unique.</div>\n        )\n    }\n\n    const newCategoryForm=()=>(\n        <form onSubmit={clickSubmit}>\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Name</label>\n                <input className=\"form-control\" type=\"text\" onChange={handleChange} value={name} autoFocus/>\n\n            </div>\n            <button className=\"btn btn-outline-primary\">Create Category</button>\n        </form>\n    )\n\n    return (\n       <Layout title=\"Add a new category\" description={`Good day ${user.name},ready to add new category`}>\n\n           <div className=\"row\">\n    <div className=\"col-md-8 offset-md-2\">\n        {showSuccess()}\n        {showError()}\n        {newCategoryForm()}\n        </div>\n           </div>\n       </Layout>\n    )\n}\n\nexport default AddCategory\n","/home/aditya/Desktop/React Project/ecommerce-front/src/admin/apiAdmin.js",[],"/home/aditya/Desktop/React Project/ecommerce-front/src/admin/AddProduct.js",["171","172","173","174","175","176","177","178","179","180","181","182"],"import React,{useState,useEffect} from 'react'\nimport Layout from '../core/Layout'\nimport {Link} from 'react-router-dom'\nimport { isAuthenticated } from '../auth';\nimport { createCategorySubmit, createProductSubmit, getCategories } from './apiAdmin';\n\n\nconst AddProduct = () => {\n\n    const {user,token}=isAuthenticated();\n\n    const [values, setValues] = useState({\n\n        name:'',\n        description:'',\n        price:'',\n        categories:[],\n        category:'',\n        shipping:'',\n        quantity:'',\n        photo:'',\n        loading:false,\n        error:'',\n        createdProduct:'',\n        redirectToProfile:false,\n        formData:'',\n\n    })\n\n    const {\n        name,\n        description,\n        price,\n        categories,\n        category,\n        shipping,\n        quantity,\n        photo,\n        loading,\n        error,\n        createdProduct,\n        redirectToProfile,\n        formData,\n\n    }=values;\n\n\n    const init=()=>{\n        getCategories().then(data=>{\n            if(data.err)\n            {\n                setValues({...values,error:data.err})\n            }\n            else{\n                setValues({...values,categories:data,formData:new FormData()});\n            }\n        })\n    }\n\n    useEffect(() => {\n      init();\n    }, [])\n\n    const handleChange=name=>event=>{\n\n        const value=name===\"photo\"?event.target.files[0]:event.target.value;\n        formData.set(name,value)\n        setValues({...values,[name]:value});\n\n\n    }\n\n    const clickSubmit=(e)=>{\n        e.preventDefault();\n        console.log(formData);\n        setValues({...values,loading:true,error:''})\n        \n        createProductSubmit({userId:user._id,token:token,product:formData})\n        .then(data=>{\n            if(data.err){\n                setValues({...values,error:data.err})\n            }\n            else{\n                setValues({...values,\n                    loading:false,\n                    error:'',\n                    createdProduct:data.name,\n                    name:'',\n                    description:'',\n                    price:'',\n                    category:'',\n                    shipping:'',\n                    quantity:'',\n                    photo:'',\n                    formData:''\n                \n                })\n            }\n        })\n        \n    }\n\n    const showError=()=>{\n        return(\n            <div className=\"alert alert-danger\" style={{display:error?'':'none'}}>\n                <h3>{error}</h3>\n            </div>\n        )\n    }\n    const showSuccess=()=>{\n        return(\n            <div className=\"alert alert-success\" style={{display:createdProduct?'':'none'}}>\n                <h3>{createdProduct} is created</h3>\n            </div>\n        )\n    }\n\n    const newProductForm=()=>(\n\n        <form className=\"mb-3\" onSubmit={clickSubmit}>\n            <div className=\"form-group\">\n                <label htmlFor=\"Photo\" className=\"text-muted\">Photo</label>\n                <input onChange={handleChange('photo')} type=\"file\" name=\"photo\" className=\"btn btn-secondary form-control-file\" accept=\"image/*\"/>\n            </div>\n\n            <div className=\"form-group\">\n                <label htmlFor=\"Name\" className=\"text-muted\">Name</label>\n                <input  onChange={handleChange('name')} type=\"text\" name=\"name\" className=\"form-control\"/>\n            </div>\n\n            <div className=\"form-group\">\n                <label htmlFor=\"Description\" className=\"text-muted\">Description</label>\n                <textarea  onChange={handleChange('description')}  name=\"description\" className=\"form-control\">\n                </textarea>\n            </div>\n            \n            <div className=\"form-group\">\n                <label htmlFor=\"Price\" className=\"text-muted\">Price</label>\n                <input onChange={handleChange('price')}  type=\"number\" name=\"price\" className=\"form-control\"/>\n            </div>\n\n            <div className=\"form-group\">\n                <label htmlFor=\"Quantity\" className=\"text-muted\">Quantity</label>\n                <input onChange={handleChange('quantity')} type=\"number\" name=\"quantity\" className=\"form-control\"/>\n            </div>\n\n            <div className=\"form-group\">\n                <label htmlFor=\"Category\" className=\"text-muted\">Category</label>\n                <select onChange={handleChange('category')}  className=\"form-control\">\n                    <option>Please select category</option>\n                    {categories && categories.map((c,i)=>(\n                        <option key={i} value={c._id}>{c.name}</option>\n                    ))}\n                </select>\n            </div>\n\n\n            <div className=\"form-group\">\n                <label htmlFor=\"Shipping\" className=\"text-muted\">Shipping</label>\n                <select onChange={handleChange('shipping')}  className=\"form-control\">\n                    <option >Please select option</option>\n                    <option value=\"0\">No</option>\n                    <option value=\"1\">Yes</option>\n                </select>\n            </div>\n            <button className=\"btn btn-outline-primary\">Create Product</button>\n\n        </form>\n    )\n\n    return (\n        <Layout title=\"Add a new product\" description={`Good day ${user.name},ready to add new product`}>\n \n            <div className=\"row\">\n     <div className=\"col-md-8 offset-md-2\">\n         {showError()}\n         {showSuccess()}\n         {newProductForm()}\n         </div>\n            </div>\n        </Layout>\n     )\n}\n\nexport default AddProduct\n","/home/aditya/Desktop/React Project/ecommerce-front/src/core/apiCore.js",[],"/home/aditya/Desktop/React Project/ecommerce-front/src/core/Card.js",["183"],"import React,{useState,useEffect} from 'react'\nimport { Link, Redirect } from 'react-router-dom'\nimport ShowImage from './ShowImage'\nimport moment from 'moment'\nimport { addItem,updateItem,removeItem } from './cartHelpers'\n\nconst Card = ({product,showViewButton=true,showCartButton=true,cartUpdate=false,showRemoveProductButon=false,refresh}) => {\n\n\n    const [redirect,setRedirect]=useState(false);\n    const [count,setCount]=useState(product.count)\n\n    const viewButton=(show)=>{\n    \n        return(\n            show &&\n            \n        <Link to={`/product/${product._id}`}>\n        <button className=\"btn btn-outline-primary m-2\">View</button>\n    </Link>)\n          \n\n    }\n\n    const addToCart=()=>{\n        addItem(product,()=>{\n            setRedirect(true);\n        })\n    }\n\n    const redirectToCart=()=>{\n        if(redirect)\n        {\n            return <Redirect to=\"/cart\"/>\n        }\n    }\n    const cartButton=(showCartButton)=>{\n        return(\n        \n        showCartButton &&\n        <Link to=\"/cart\">\n        <button onClick={addToCart} className=\"btn btn-outline-warning m-2\">Cart</button>\n    </Link>\n\n\n        )\n    } \n\n    const showRemoveButton=(showRemoveProductButon)=>{\n        return(\n        \n            showRemoveProductButon &&\n        \n        <button onClick={()=>{removeItem(product._id); refresh(true);}} className=\"btn btn-outline-danger m-2\">Remove Product</button>    )\n    } \n\n\n\n\n    const handleChange=productId=>event=>{\n        setCount(event.target.value<1?1:event.target.value);\n        refresh(true)\n        if(event.target.value>1)\n        {\n            updateItem(productId,event.target.value)\n        }\n\n\n    }\n\n\n\n\n    const updateQuantity=cartUpdate=>{\n        \n       return ( cartUpdate && (\n            <div>\n                <div className=\"input-group mb-3\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text\">Adjust Quantity</span>                        \n                    </div>\n                    <input type=\"number\"  value={count} className=\"form-control\" onChange={handleChange(product._id)}/>\n                    \n                </div>\n            </div>\n        )\n       )\n    }\n\n    const stockMark=(quantity)=>{\n        return quantity>0?<span className=\"badge badge-primary badge-pill m-2\">In stock</span>:<span className=\"badge badge-warning badge pill m-2\">Out of stock</span>\n\n\n    }\n    return (\n            <div className=\"card\">\n                <div className=\"card-header name\">\n                    {product.name}\n                </div>\n                <div className=\"card-body\">\n                    {redirectToCart(redirect)}\n                    <ShowImage item={product} url=\"products\"/>\n                    <p className=\"lead mt-2\">{product.description}</p>\n                    <p className=\"black-10\">Price:₹{product.price}</p>\n                    <p className=\"black-9\">Category: {product.category && product.category.name}</p>\n                    <p className=\"black-9\">Added on {moment(product.createdAt).fromNow()}</p>\n                        {stockMark(product.quantity)}\n                        <hr/>\n                    {viewButton(showViewButton)}\n                    {cartButton(showCartButton)}\n                    {showRemoveButton(showRemoveProductButon)}\n                    {updateQuantity(cartUpdate)}\n                </div>\n            </div>\n            \n    )\n}\n\nexport default Card\n","/home/aditya/Desktop/React Project/ecommerce-front/src/core/ShowImage.js",[],"/home/aditya/Desktop/React Project/ecommerce-front/src/core/Shop.js",["184","185","186","187","188","189"],"import React,{useState,useEffect} from 'react'\nimport Layout from './Layout'\nimport {getCategories} from './apiCore'\nimport Checkbox from './Checkbox';\nimport Radiobox from './Radiobox';\nimport {prices} from './fixedPrices'\nimport {getFilteredResults} from './apiCore'\nimport Card from './Card'\n\nconst Shop = () => {\n\n    const [categories, setCategories] = useState([]);\n    const [error,setError]=useState(false);\n\n    const [myFilters,setMyFilters]=useState({\n        filters:{\n            category:[],\n            price:[]\n        }\n    })\n\n    const [skip,setSkip]=useState(0);\n    const [limit,setLimit]=useState(2);\n    const [size ,setSize]=useState(0);\n    const [filteredResults,setFilteredResults]=useState([]);\n    const [ids,setIds]=useState([])\n\n    const loadFilteredResults=(newFilters)=>{\n        console.log(newFilters)\n        getFilteredResults(skip,limit,newFilters)\n        .then(data=>{\n            if(data.err)\n            {\n                setError(data.err);\n            }\n            else\n            {\n                setFilteredResults(data.data);\n                setSize(data.size)\n                setSkip(0);\n\n            }\n        })\n    }\n\n    // const exceptList=(data)=>{\n    //     let CatList=[]\n\n    //     for(key in data)\n    //     {\n    //         for(k in )\n    //     }\n\n    // }\n\n    const loadMore=()=>{\n        let  toSkip=skip+limit;\n        getFilteredResults(toSkip,limit,myFilters.filters)\n        .then(data=>{\n            if(data.err)\n            {\n                setError(data.err);\n            }\n            else\n            {\n                console.log(data.data[0]._id)\n                setFilteredResults([...filteredResults,...data.data]);\n                setSize(data.size)\n                setSkip(toSkip);\n\n            }\n        })\n    }\n\n    const loadMoreButton=()=>{\n        return(\n            size>0 && size>=limit &&(\n                <div>\n                    <button onClick={loadMore} className=\"btn btn-warning mb-5\">Load More</button> \n                </div>\n           \n            )\n        )\n    }\n\n    const init=()=>{\n        getCategories().then(data=>{\n            if(data.err)\n            {\n                setError(data.err)\n            }\n            else{\n                setCategories(data)\n            }\n        })\n    }\n\n    useEffect(() => {\n      init();\n      loadFilteredResults(skip,limit,myFilters.filters)\n\n    }, [])\n\n\n    const handleFilters=(filters,filterBy)=>{\n        const newFilters={...myFilters}\n        newFilters.filters[filterBy]=filters\n\n        if(filterBy==\"price\")\n        {\n           let prices=handlePrices(filters);\n           newFilters.filters[filterBy]=prices\n\n        }\n        loadFilteredResults(myFilters.filters)\n        setMyFilters(newFilters)\n    }\n\n    const handlePrices=(value)=>{\n        const data =prices;\n         \n        let array=[]\n\n        for(let key in data)\n        {\n            if(data[key]._id===parseInt(value))\n            {\n                array=data[key].array\n            }\n        }\n        return array;\n\n    }\n\n    return (\n        <Layout title=\"Shop page\" description=\"Search and find your choice\" className=\"container-fluid\">\n\n        <div className=\"row\">\n            <div className=\"col-4\">\n               <h4>Filter By Categories</h4>\n                <ul>\n                    <Checkbox categories={categories} handleFilters={filters=>{\n                        handleFilters(filters,'category')\n                    }}/>\n                </ul>\n\n                <h4>Filter by price range</h4>\n                <ul>\n                    <Radiobox prices={prices} handleFilters={filters=>{\n                        handleFilters(filters,'price')\n                    }}/>\n                </ul>\n             \n            </div>\n            <div className=\"col-8\">\n                <div className=\"row\">\n                        {filteredResults.map((product,i)=>(\n                             <div className=\"col-4 mb-2\" key={i}>\n                             <Card product={product}/>\n                          </div>\n                        ))}\n                </div>\n                <hr/>\n                {loadMoreButton()}\n                \n            </div>\n        </div>\n      \n    </Layout>\n    )\n}\n\nexport default Shop\n","/home/aditya/Desktop/React Project/ecommerce-front/src/core/Checkbox.js",["190"],"import React,{useState,useEffect} from 'react'\n\nconst Checkbox = ({categories,handleFilters}) => {\n\n    const [checked,setChecked] = useState([]);\n     const handleToggle=c=>()=>{\n\n        const currentCategoryId=checked.indexOf(c);\n        const newCategoryId=[...checked]\n\n        if(currentCategoryId===-1)\n        {\n            newCategoryId.push(c)\n        }\n        else\n        {\n            newCategoryId.splice(currentCategoryId,1);\n         \n        }\n        setChecked(newCategoryId)\n        handleFilters(newCategoryId);\n\n     }\n\n    return (\n        categories.map((c,i)=>(\n            <li key={i} className=\"list-unstyled\">\n                <input onChange={handleToggle(c._id)} value={checked.indexOf(c._id)===-1} type=\"checkbox\" className=\"form-check-input\"/>\n        <label className=\"form-check-label\">{c.name}</label>\n            </li>\n        ))\n     \n    )\n}\n\nexport default Checkbox\n","/home/aditya/Desktop/React Project/ecommerce-front/src/core/Radiobox.js",["191","192"],"import React, { Fragment,useState } from 'react'\n\nconst Radiobox = ({prices,handleFilters}) => {\n\n    const [value,setValue]= useState(0)\n    const handleChange=(e)=>{\n        handleFilters(e.target.value)\n        setValue(e.target.value);\n    }\n    return (\n        prices.map((p,i)=>(\n            <div key={i}>\n                <input onChange={handleChange} value={`${p._id}`} name={p} type=\"radio\" className=\"ml-2 mr-2\"/>\n            <label className=\"form-check-label\">{p.name}</label>\n            </div>\n        ))\n    )\n}\n\nexport default Radiobox\n","/home/aditya/Desktop/React Project/ecommerce-front/src/core/fixedPrices.js",[],"/home/aditya/Desktop/React Project/ecommerce-front/src/core/Search.js",[],"/home/aditya/Desktop/React Project/ecommerce-front/src/core/Product.js",["193"],"import React,{useState,useEffect}from 'react'\nimport Layout from './Layout'\nimport {read, relatedList} from './apiCore'\nimport Card from './Card';\nconst Product = (props) => {\n\n    const [product,setProduct]=useState([]);\n    const [error,setError]=useState(false);\n    const [relatedProducts,setRelatedProducts]=useState([])\n\n\n    const loadSingle=(productId)=>{\n        read(productId)\n        .then(data=>{\n            if(data.err)\n            {\n                setError(data.err)\n            }\n            else\n            {\n            setProduct(data);\n            //related\n            relatedList(data._id)\n            .then(response=>{\n                if(response.err)\n                {\n                    setError(response.err);\n                }\n                setRelatedProducts(response)\n            })\n            }\n        })\n\n    }\n    useEffect(() => {\n     \n        const productId=props.match.params.productId;\n        loadSingle(productId);\n\n    }, [props])\n\n    return (\n        <Layout title={product.name && product.name} description={product.description && product.description} className=\"m-5\">\n           <div className=\"row\">\n                <div className=\"col-8\">\n                    <Card product={product} showViewButton={false}/>\n                </div>\n               \n                <div className=\"col-4\">\n                    {relatedProducts && relatedProducts.map((p,i)=>(\n                    <div>\n                        <h2>Related Products</h2>\n                        <Card product={p} key={i}/>\n                    </div>))}\n                  \n   \n                </div>\n           </div>\n            \n        \n    </Layout>\n    )\n}\n\nexport default Product\n","/home/aditya/Desktop/React Project/ecommerce-front/src/core/cartHelpers.js",["194","195"],"export const addItem=(item,next)=>{\n    let cart=[]\n    if(typeof window !== 'undefined')\n    {\n        if(localStorage.getItem(\"cart\"))\n        {\n            cart=JSON.parse(localStorage.getItem(\"cart\"));\n        }\n\n        cart.push({\n            ...item,\n            count:1\n        });\n\n        cart=Array.from(new Set(cart.map((p)=>p._id))).map(id=>{\n            return cart.find((p)=>p._id===id)\n        })\n            \n   \n        localStorage.setItem(\"cart\",JSON.stringify(cart));\n        console.log(localStorage.getItem(\"cart\"))\n        next();\n\n\n    }\n\n}\n\nexport const itemTotal=()=>{\n    if(typeof window!=='undefined')\n    {\n        if(localStorage.getItem(\"cart\"))\n        {\n            return JSON.parse(localStorage.getItem(\"cart\")).length;\n        }\n    }\n    return 0;\n}\n\nexport const getCart=()=>{\n    if(typeof window!=='undefined')\n    {\n        if(localStorage.getItem(\"cart\"))\n        {\n            return JSON.parse(localStorage.getItem(\"cart\"));\n        }\n    }\n    return 0;\n}\n\n\nexport const updateItem=(productId,count)=>{\n    let cart=[]\n    if(typeof window!=='undefined')\n    {\n        if(localStorage.getItem(\"cart\"))\n        {\n            cart=JSON.parse(localStorage.getItem(\"cart\"));\n        }\n\n        cart.map((product,i)=>{\n            if(product._id===productId)\n            {\n                cart[i].count=count;\n            }\n        })\n        localStorage.setItem(\"cart\",JSON.stringify(cart));\n    }\n    \n}\n\n\nexport const removeItem=(productId)=>{\n    let cart=[]\n    if(typeof window!=='undefined')\n    {\n        if(localStorage.getItem(\"cart\"))\n        {\n            cart=JSON.parse(localStorage.getItem(\"cart\"));\n        }\n\n        cart.map((product,i)=>{\n            if(product._id===productId)\n            {\n                cart.splice(i,1);\n            }\n        })\n        localStorage.setItem(\"cart\",JSON.stringify(cart));\n    }\n    return cart;\n}\n\nexport const emptyCart=(next)=>{\n    if(typeof window!=='undefined')\n    {\n        localStorage.removeItem(\"cart\");\n        next()\n    }\n}","/home/aditya/Desktop/React Project/ecommerce-front/src/core/Cart.js",["196"],"import React,{useState,useEffect} from 'react'\nimport {Link} from 'react-router-dom'\nimport Layout from './Layout'\nimport Card from './Card';\nimport { getCart } from './cartHelpers';\nimport Product from './Product';\nimport Checkout from './Checkout';\n\n\n\n\nconst Cart = () => {\n\n\n    const [items,setItems]=useState([]);\n    const [refresh,setRefresh]=useState(false)\n\n\n    useEffect(() => {\n      setItems(getCart);\n      setRefresh(false)\n      \n    },[refresh])\n    const showItems=(items)=>{\n        return (\n           <div>\n               <h2>Your cart has {`${items.length}`} items</h2>\n               <hr/>\n               {items.map((p,i)=>(\n                \n                       <Card product={p} key={i}  showCartButton={false} cartUpdate={true} showRemoveProductButon={true} refresh={(value = false) => {\n                        setRefresh(value);\n                    }}/>\n               ))}\n\n           </div> \n        )\n\n    }\n\n\n    \n\n    const noItemMessage=()=>{\n        return(\n            <div className=\"container\">\n                <div className=\"mx-auto\">\n                No items in the cart<Link to=\"/shop\">Continue shopping...</Link>\n                </div>\n            <br/>\n        </div>\n        )\n    }\n\n    return (\n        <Layout title=\"Cart page\" description=\"Your Cart\">\n\n       <div className=\"row\">\n           <div className=\"col-6\">\n             {items.length>0?showItems(items):noItemMessage()}\n           </div>\n           <div className=\"col-6\">\n               <h2 className=\"mb-4\">Cart Summary</h2>\n               <hr/>\n            <Checkout products={items} refresh={(value = false) => {\n                            setRefresh(value);\n                        }}/>\n           </div>\n       </div>\n      \n    </Layout>\n    )\n}\n\nexport default Cart\n","/home/aditya/Desktop/React Project/ecommerce-front/src/core/Checkout.js",["197","198","199","200"],"import React,{useState,useEffect}from 'react'\nimport Layout from './Layout'\nimport {createOrder, getBraintreeClientToken, processPayment} from './apiCore'\nimport Card from './Card';\nimport { isAuthenticated } from '../auth'\nimport { Link } from 'react-router-dom';\nimport DropIn from 'braintree-web-drop-in-react'\nimport { emptyCart } from './cartHelpers';\n\nconst Checkout = ({products,refresh}) => {\n\n    const [data,setData]=useState({\n        success:false,\n        clientToken:null,\n        error:false,\n        instance:{},\n        address:'',\n        loading:false\n    })\n\n\n    const userId=isAuthenticated() && isAuthenticated().user._id;\n    const token=isAuthenticated() && isAuthenticated().token;\n    let deliveryAddress = data.address;\n\n    const getToken=(userId,token)=>{\n        getBraintreeClientToken(userId,token)\n        .then(data=>{\n            if(data.err)\n            {\n                setData({...data,error:data.err})\n            }\n            else{\n                setData({clientToken:data.clientToken})\n            }\n        })\n    }\n\n    useEffect(()=>{\n        getToken(userId,token);\n    },[])\n\n    const getTotal=()=>{\n        if(products.length>0)\n        return products.reduce((current,next)=>{\n            return current+next.count*next.price;\n        },0);\n        else{\n            return 0;\n        }\n    }\n\n\n    const buy=()=>{\n        setData({loading:true})\n        let nonce;\n        let getNonce=data.instance.requestPaymentMethod()\n        .then(data=>{\n          \n            nonce=data.nonce\n            \n            const paymentData={\n                paymentMethodNonce:nonce,\n                amount:getTotal(products)\n            }\n            processPayment(userId,token,paymentData)\n            .then(response=>{\n                const createOrderData = { \n                    products: products,\n                    transaction_id: response.transaction.id,\n                    amount: response.transaction.amount,\n                    address:deliveryAddress\n                }\n\n                console.log(response)\n                \n                createOrder(userId,token,createOrderData);\n\n                setData({success:response.success,loading:false})\n                emptyCart(()=>{\n                    refresh(true);\n                    console.log(\"cart is empty\")\n                })\n            })\n            .catch(err=>{\n                setData({error:err,loading:false})\n            })\n\n        })\n        .catch(err=>{\n            // console.log(err)\n            setData({...data,error:err.message,success:false})\n        })\n    };\n\n\n\n    const handleAddress = event => {\n        setData({...data, address: event.target.value});\n    }\n\n    const showSuccess=(success)=>(\n        <div className=\"alert alert-info\" style={{display:success?\"\":'none'}}>\n            Thanks! Your payment was successful.\n        </div>\n    )\n\n    const showLoading=(loading)=>(\n        <div className=\"alert alert-info\" style={{display:loading?\"\":'none'}}>\n            Loading...\n        </div>\n    )\n\n\n\n\n    const showError=()=>(\n        <div className=\"alert alert-danger\" style={{display:data.error?\"\":'none'}}>\n            {data.error}\n        </div>\n    )\n\n    const showDropIn=()=>(\n    <div onBlur={()=>setData({...data,error:\"\",success:false})}>\n\n        <div>\n            {data.clientToken!==null && data.clientToken!=='' && products.length>0?(\n                <div className=\"container-fluid\">\n                        <div className='form-group mb-3'>\n                            <label className='text-muted'>\n                                Delivery address:\n                            </label>\n                            <textarea\n                                onChange={handleAddress}\n                                className='form-control'\n                                value={data.address}\n                                placeholder='Type your delivery address here'>\n                            </textarea>\n                        </div>\n                    <DropIn options={{\n                        authorization:data.clientToken\n                    }} onInstance={instance=>(data.instance=instance)}/>\n                    <button onClick={buy} type=\"button\" className=\"btn btn-primary btn-block\">Pay</button>\n                </div>\n            ):(null)}\n        </div>\n        </div>\n        )\n    \n\n    const showCheckOut=()=>{\n        return isAuthenticated()?\n        (<div>\n            <div>{showDropIn()}</div>\n        </div>\n         ):(\n            <Link to=\"signup\">\n                <button type=\"button\" className=\"btn btn-warning\"> Signin to continue</button>\n            </Link>\n        )\n    }\n\n\n    return (\n        <div>\n           <h2>Total: ₹{getTotal()}</h2> \n           {showLoading(data.loading)}\n           {showSuccess(data.success)}\n           {showError()}\n           {showCheckOut()}\n        </div>\n    )\n}\n\nexport default Checkout\n","/home/aditya/Desktop/React Project/ecommerce-front/src/admin/Orders.js",["201","202"],"import React,{useState,useEffect} from 'react'\nimport Layout from '../core/Layout'\nimport {Link} from 'react-router-dom'\nimport { isAuthenticated } from '../auth';\nimport { listOrders,getStatusValues,updateOrderStatus } from './apiAdmin';\nimport moment from 'moment'\n\nconst Orders = () => {\n\n\n    const [orders,setOrders]=useState([]);\n    const [statusValues,setStatusValues]=useState([]);\n\n\n    useEffect(() => {\n        loadOrders();\n        loadStatusValues();\n       }, [])\n   \n   \n\n    const {user,token}=isAuthenticated();\n    const userId=user._id;\n\n    const loadOrders=()=>{\n\n        listOrders(userId,token)\n        .then(data=>{\n            if(data.err)\n            {\n                console.log(data.err)\n            }\n            else\n            {\n                setOrders(data);\n            }\n        })\n    }\n\n    const showOrdersLength = () => {\n        if (orders.length > 0) {\n            return(\n                <h1 className='text-danger display-2'>\n                    Total orders: {orders.length}\n                </h1>\n            );\n        } else {\n            return(\n                <h1 className='text-danger'>\n                    No orders\n                </h1>\n            );\n        }\n    }\n\n\n    const showInput = (key, value) => {\n        return(\n            <div\n                className='input-group mb-2 mr-sm-2'>\n                <div className='input-group-prepend'>\n                    <div className='input-group-text'>\n                        {key}\n                    </div>\n                </div>\n                <input\n                    type='text'\n                    value={value}\n                    className='form-control'\n                    readOnly>\n                </input>\n            </div>\n        );\n    }\n\n    const loadStatusValues = () => {\n        getStatusValues(user._id, token)\n        .then(data => {\n            if (data.error) {\n                console.log(data.error);\n            } else {\n                setStatusValues(data);\n            }\n        });\n    }    \n\n\n\n\n    const showStatus = (order) => {\n        return(\n            <div className='form-group'>\n                <h3 className='mark mb-4'>\n                    Status: {order.status}\n                </h3>\n                <select\n                    className='form-control'\n                    onChange={(e) => (\n                        handleStatusChange(e, order._id)\n                    )}>\n                    <option>\n                        Update status\n                    </option>\n                    {statusValues.map((status, i) => {\n                        return(\n                            <option\n                                key={i}\n                                value={status}>\n                                {status}\n                            </option>\n                        );\n                    })}\n                </select>\n            </div>\n        );\n    }\n\n\n\n    const handleStatusChange = (e, orderId) => {\n        updateOrderStatus(user._id, token, orderId, e.target.value)\n        .then(data => {\n            if (data.error) {\n                console.log('Status update failed')\n            } else {\n                loadOrders();\n            }\n        })\n\n        console.log(e.target.value);\n    }\n\n\n   \n\n   return( <Layout title=\"Ordered Product List\" description={`Good day ${user.name},you can manage all orders here`}>\n\n<div className=\"row\">\n    <div className=\"col-md-8 offset-md-2\">\n    {showOrdersLength()}\n                    {orders.map((order, i) => {\n                        return(\n                            <div\n                                key={i}\n                                className='mt-5'\n                                style={{borderBottom: '5px solid indigo'}}>\n                                <h2 className='mb-5'>\n                                    <span className='bg-primary'>\n                                        Order ID: {order._id}\n                                    </span>\n                                </h2>\n                                <ul>\n                                    <li className='list-group-item'>\n                                        {showStatus(order)}\n                                    </li>\n                                    <li className='list-group-item'>\n                                        Transaction ID: {order.transaction_id}\n                                    </li>\n                                    <li className='list-group-item'>\n                                        Amount: ${order.amount}\n                                    </li>\n                                    <li className='list-group-item'>\n                                        Ordered by: {order.user.name}\n                                    </li>\n                                    <li className='list-group-item'>\n                                        Ordered on: {moment(order.createdAt).format('DD/MM/yyyy')}, {moment(order.createdAt).fromNow()}\n                                    </li>\n                                    <li className='list-group-item'>\n                                        Delivered address: {order.address}\n                                    </li>                                                                                                                                                                     \n                                </ul>\n                                <h3 className='mt-4 mb-4 font-italic'>\n                                    Total products in the order: {order.products.length}\n                                </h3>\n\n                                {order.products.map((prod, i) => (\n                                    <div\n                                        key={i}\n                                        className='mb-4'\n                                        style={{padding: '20px', boder: '1px solid indigo'}}>\n                                        {showInput('Product name', prod.name)}\n                                        {showInput('Product price', prod.price)}\n                                        {showInput('Product quantity', prod.count)}\n                                        {showInput('Product Id', prod._id)}\n                                    </div>\n                                ))}\n\n\n                                </div>\n                        );\n                    })}\n    </div>\n</div>\n</Layout>\n)\n}\n\nexport default Orders\n","/home/aditya/Desktop/React Project/ecommerce-front/src/user/Profile.js",["203","204"],"import React,{useState,useEffect} from 'react'\nimport { Link,Redirect} from 'react-router-dom';\nimport { isAuthenticated } from '../auth'\nimport {read,update,updateUser} from './apiUser'\nimport Layout from '../core/Layout'\n\nconst Profile = ({match}) => {\n\n\n   const [values,setValues]=useState({\n       name:'',\n       email:'',\n       password:'',\n       error:false,\n       success:false\n   });\n\n   const {token}=isAuthenticated();\n\n   const {name,email,password}=values;\n\n   const init=(userId)=>{\n       read(userId,token).then(response=>{\n           if(response.err)\n           {\n               setValues({...values,error:response.err})\n           }\n           else\n           {\n               setValues({...values,name:response.name,email:response.email})\n           }\n       })\n\n   }\n\n   useEffect(()=>{\n    init(match.params.userId)\n   },[])\n\n\n   const handleChange = name => e => {\n    setValues({...values,\n        error: false,\n        [name] : e.target.value});\n}\n\nconst clickSubmit = (e) => {\n    e.preventDefault();\n    \n    update(match.params.userId, token, {name, email, password})\n    .then(data => {\n        if (data.error) {\n            console.log(data.error);\n        } else {\n            updateUser(data, () => {\n                setValues({...values, \n                    name: data.name,\n                    email: data.email,\n                    success: true\n                });\n            })\n        }\n    })\n}\n\n\n   const profileUpdate = (name, email, password) => {\n    return(\n        <form>\n            <div className='form-group'>\n                <label className='text-muted'>\n                    Name\n                </label>\n                <input\n                    type='text'\n                    className='form-control'\n                    value={name}\n                    onChange={handleChange('name')}>\n                </input>\n            </div>\n            <div className='form-group'>\n                <label className='text-muted'>\n                    Email\n                </label>\n                <input\n                    type='email'\n                    className='form-control'\n                    value={email}\n                    onChange={handleChange('email')}>\n                </input>\n            </div>\n            <div className='form-group'>\n                <label className='text-muted'>\n                    Password\n                </label>\n                <input\n                    type='password'\n                    className='form-control'\n                    value={password}\n                    onChange={handleChange('password')}>\n                </input>\n            </div>\n            <button\n                onClick={clickSubmit}\n                className='btn btn-primary btn-block'>Submit\n            </button>                            \n        </form>\n    );\n}\n\nconst redirectUser = (success) => {\n    if (success) {\n        return(\n            <Redirect to='cart'/>\n        );\n    }\n}\n\n    return (\n        <Layout title=\"Profile Update\" description=\"Upadte your profile\" className=\"container\">\n            \n        {profileUpdate(name,email,password)}\n        {redirectUser(values.success)}\n        </Layout>\n    )\n}\n\nexport default Profile\n","/home/aditya/Desktop/React Project/ecommerce-front/src/user/apiUser.js",["205"],"import queryString from 'query-string'; \nimport {API} from '../config';\n\nexport const read = (userId, token) => {\n    return fetch(`${API}/user/${userId}`, {\n        method: \"GET\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n        }\n    })\n    .then(res => {\n        return res.json();\n    })\n    .catch(err => {\n        console.log(err);\n    });\n}\n\nexport const update = (userId, token, user) => {\n    return fetch(`${API}/user/${userId}`, {\n        method: \"PUT\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify(user)\n    })\n    .then(res => {\n        return res.json();\n    })\n    .catch(err => {\n        console.log(err);\n    });\n}\n\nexport const updateUser = (user, next) => {\n    if (typeof window !== 'undefined') {\n        if (localStorage.getItem('jwt')) {\n            let auth = JSON.parse(localStorage.getItem('jwt'));\n\n            auth.user = user;\n            localStorage.setItem('jwt', JSON.stringify(auth));\n\n            next();\n        }\n    }\n}\n\n\nexport const getPurchaseHistory = (userId, token) => {\n    return fetch(`${API}/orders/by/user/${userId}`, {\n        method: \"GET\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n        }\n    })\n    .then(res => {\n        return res.json();\n    })\n    .catch(err => {\n        console.log(err);\n    });\n}","/home/aditya/Desktop/React Project/ecommerce-front/src/admin/ManageProducts.js",[],"/home/aditya/Desktop/React Project/ecommerce-front/src/admin/UpdateProduct.js",["206","207","208","209","210","211"],{"ruleId":"212","replacedBy":"213"},{"ruleId":"214","replacedBy":"215"},{"ruleId":"212","replacedBy":"216"},{"ruleId":"214","replacedBy":"217"},{"ruleId":"218","severity":1,"message":"219","line":3,"column":9,"nodeType":"220","messageId":"221","endLine":3,"endColumn":13},{"ruleId":"218","severity":1,"message":"222","line":12,"column":12,"nodeType":"220","messageId":"221","endLine":12,"endColumn":17},{"ruleId":"218","severity":1,"message":"222","line":13,"column":12,"nodeType":"220","messageId":"221","endLine":13,"endColumn":17},{"ruleId":"223","severity":1,"message":"224","line":36,"column":8,"nodeType":"225","endLine":36,"endColumn":10,"suggestions":"226"},{"ruleId":"218","severity":1,"message":"227","line":9,"column":18,"nodeType":"220","messageId":"221","endLine":9,"endColumn":21},{"ruleId":"218","severity":1,"message":"219","line":3,"column":9,"nodeType":"220","messageId":"221","endLine":3,"endColumn":13},{"ruleId":"218","severity":1,"message":"219","line":3,"column":9,"nodeType":"220","messageId":"221","endLine":3,"endColumn":13},{"ruleId":"218","severity":1,"message":"228","line":5,"column":10,"nodeType":"220","messageId":"221","endLine":5,"endColumn":30},{"ruleId":"218","severity":1,"message":"229","line":31,"column":9,"nodeType":"220","messageId":"221","endLine":31,"endColumn":13},{"ruleId":"218","severity":1,"message":"230","line":32,"column":9,"nodeType":"220","messageId":"221","endLine":32,"endColumn":20},{"ruleId":"218","severity":1,"message":"231","line":33,"column":9,"nodeType":"220","messageId":"221","endLine":33,"endColumn":14},{"ruleId":"218","severity":1,"message":"232","line":35,"column":9,"nodeType":"220","messageId":"221","endLine":35,"endColumn":17},{"ruleId":"218","severity":1,"message":"233","line":36,"column":9,"nodeType":"220","messageId":"221","endLine":36,"endColumn":17},{"ruleId":"218","severity":1,"message":"234","line":37,"column":9,"nodeType":"220","messageId":"221","endLine":37,"endColumn":17},{"ruleId":"218","severity":1,"message":"235","line":38,"column":9,"nodeType":"220","messageId":"221","endLine":38,"endColumn":14},{"ruleId":"218","severity":1,"message":"236","line":39,"column":9,"nodeType":"220","messageId":"221","endLine":39,"endColumn":16},{"ruleId":"218","severity":1,"message":"237","line":42,"column":9,"nodeType":"220","messageId":"221","endLine":42,"endColumn":26},{"ruleId":"223","severity":1,"message":"238","line":62,"column":8,"nodeType":"225","endLine":62,"endColumn":10,"suggestions":"239"},{"ruleId":"218","severity":1,"message":"240","line":1,"column":24,"nodeType":"220","messageId":"221","endLine":1,"endColumn":33},{"ruleId":"218","severity":1,"message":"222","line":13,"column":12,"nodeType":"220","messageId":"221","endLine":13,"endColumn":17},{"ruleId":"218","severity":1,"message":"241","line":23,"column":18,"nodeType":"220","messageId":"221","endLine":23,"endColumn":26},{"ruleId":"218","severity":1,"message":"242","line":26,"column":12,"nodeType":"220","messageId":"221","endLine":26,"endColumn":15},{"ruleId":"218","severity":1,"message":"243","line":26,"column":16,"nodeType":"220","messageId":"221","endLine":26,"endColumn":22},{"ruleId":"223","severity":1,"message":"244","line":102,"column":8,"nodeType":"225","endLine":102,"endColumn":10,"suggestions":"245"},{"ruleId":"246","severity":1,"message":"247","line":109,"column":20,"nodeType":"248","messageId":"249","endLine":109,"endColumn":22},{"ruleId":"218","severity":1,"message":"240","line":1,"column":24,"nodeType":"220","messageId":"221","endLine":1,"endColumn":33},{"ruleId":"218","severity":1,"message":"250","line":1,"column":17,"nodeType":"220","messageId":"221","endLine":1,"endColumn":25},{"ruleId":"218","severity":1,"message":"251","line":5,"column":12,"nodeType":"220","messageId":"221","endLine":5,"endColumn":17},{"ruleId":"218","severity":1,"message":"222","line":8,"column":12,"nodeType":"220","messageId":"221","endLine":8,"endColumn":17},{"ruleId":"252","severity":1,"message":"253","line":61,"column":29,"nodeType":"254","messageId":"255","endLine":61,"endColumn":31},{"ruleId":"252","severity":1,"message":"253","line":82,"column":29,"nodeType":"254","messageId":"255","endLine":82,"endColumn":31},{"ruleId":"218","severity":1,"message":"256","line":6,"column":8,"nodeType":"220","messageId":"221","endLine":6,"endColumn":15},{"ruleId":"218","severity":1,"message":"257","line":2,"column":8,"nodeType":"220","messageId":"221","endLine":2,"endColumn":14},{"ruleId":"218","severity":1,"message":"258","line":4,"column":8,"nodeType":"220","messageId":"221","endLine":4,"endColumn":12},{"ruleId":"223","severity":1,"message":"224","line":41,"column":7,"nodeType":"225","endLine":41,"endColumn":9,"suggestions":"259"},{"ruleId":"218","severity":1,"message":"260","line":57,"column":13,"nodeType":"220","messageId":"221","endLine":57,"endColumn":21},{"ruleId":"218","severity":1,"message":"219","line":3,"column":9,"nodeType":"220","messageId":"221","endLine":3,"endColumn":13},{"ruleId":"223","severity":1,"message":"261","line":18,"column":11,"nodeType":"225","endLine":18,"endColumn":13,"suggestions":"262"},{"ruleId":"218","severity":1,"message":"219","line":2,"column":10,"nodeType":"220","messageId":"221","endLine":2,"endColumn":14},{"ruleId":"223","severity":1,"message":"263","line":38,"column":6,"nodeType":"225","endLine":38,"endColumn":8,"suggestions":"264"},{"ruleId":"218","severity":1,"message":"265","line":1,"column":8,"nodeType":"220","messageId":"221","endLine":1,"endColumn":19},{"ruleId":"218","severity":1,"message":"219","line":3,"column":9,"nodeType":"220","messageId":"221","endLine":3,"endColumn":13},{"ruleId":"218","severity":1,"message":"232","line":35,"column":9,"nodeType":"220","messageId":"221","endLine":35,"endColumn":17},{"ruleId":"218","severity":1,"message":"233","line":36,"column":9,"nodeType":"220","messageId":"221","endLine":36,"endColumn":17},{"ruleId":"218","severity":1,"message":"235","line":38,"column":9,"nodeType":"220","messageId":"221","endLine":38,"endColumn":14},{"ruleId":"218","severity":1,"message":"236","line":39,"column":9,"nodeType":"220","messageId":"221","endLine":39,"endColumn":16},{"ruleId":"223","severity":1,"message":"266","line":87,"column":8,"nodeType":"225","endLine":87,"endColumn":10,"suggestions":"267"},"no-native-reassign",["268"],"no-negated-in-lhs",["269"],["268"],["269"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'token' and 'userId'. Either include them or remove the dependency array.","ArrayExpression",["270"],"'_id' is assigned a value but never used.","'createCategorySubmit' is defined but never used.","'name' is assigned a value but never used.","'description' is assigned a value but never used.","'price' is assigned a value but never used.","'category' is assigned a value but never used.","'shipping' is assigned a value but never used.","'quantity' is assigned a value but never used.","'photo' is assigned a value but never used.","'loading' is assigned a value but never used.","'redirectToProfile' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'init'. Either include it or remove the dependency array.",["271"],"'useEffect' is defined but never used.","'setLimit' is assigned a value but never used.","'ids' is assigned a value but never used.","'setIds' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'limit', 'loadFilteredResults', 'myFilters.filters', and 'skip'. Either include them or remove the dependency array.",["272"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Fragment' is defined but never used.","'value' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Product' is defined but never used.","'Layout' is defined but never used.","'Card' is defined but never used.",["273"],"'getNonce' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'loadOrders' and 'loadStatusValues'. Either include them or remove the dependency array.",["274"],"React Hook useEffect has missing dependencies: 'init' and 'match.params.userId'. Either include them or remove the dependency array.",["275"],"'queryString' is defined but never used.","React Hook useEffect has missing dependencies: 'init' and 'match.params.productId'. Either include them or remove the dependency array.",["276"],"no-global-assign","no-unsafe-negation",{"desc":"277","fix":"278"},{"desc":"279","fix":"280"},{"desc":"281","fix":"282"},{"desc":"277","fix":"283"},{"desc":"284","fix":"285"},{"desc":"286","fix":"287"},{"desc":"288","fix":"289"},"Update the dependencies array to be: [token, userId]",{"range":"290","text":"291"},"Update the dependencies array to be: [init]",{"range":"292","text":"293"},"Update the dependencies array to be: [limit, loadFilteredResults, myFilters.filters, skip]",{"range":"294","text":"295"},{"range":"296","text":"291"},"Update the dependencies array to be: [loadOrders, loadStatusValues]",{"range":"297","text":"298"},"Update the dependencies array to be: [init, match.params.userId]",{"range":"299","text":"300"},"Update the dependencies array to be: [init, match.params.productId]",{"range":"301","text":"302"},[838,840],"[token, userId]",[1269,1271],"[init]",[2406,2408],"[limit, loadFilteredResults, myFilters.filters, skip]",[1121,1123],[475,477],"[loadOrders, loadStatusValues]",[846,848],"[init, match.params.userId]",[1958,1960],"[init, match.params.productId]"]